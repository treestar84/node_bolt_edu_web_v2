{
  "openapi": "3.0.0",
  "info": {
    "title": "Toddler Learning App API",
    "version": "1.0.0",
    "description": "API for managing words and storybooks in the toddler learning application",
    "contact": {
      "name": "API Support",
      "email": "support@toddlerlearning.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://api.toddlerlearning.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key for authentication"
      }
    },
    "schemas": {
      "Word": {
        "type": "object",
        "required": [
          "name",
          "nameEn",
          "imageUrl",
          "audioKo",
          "audioEn",
          "category"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the word",
            "example": "word-123"
          },
          "name": {
            "type": "string",
            "description": "Korean name of the word",
            "example": "고양이"
          },
          "nameEn": {
            "type": "string",
            "description": "English name of the word",
            "example": "cat"
          },
          "imageUrl": {
            "type": "string",
            "description": "URL path to the word image",
            "example": "/uploads/images/cat.png"
          },
          "audioKo": {
            "type": "string",
            "description": "URL path to Korean audio file",
            "example": "/uploads/audio/cat-ko.mp3"
          },
          "audioEn": {
            "type": "string",
            "description": "URL path to English audio file",
            "example": "/uploads/audio/cat-en.mp3"
          },
          "category": {
            "type": "string",
            "description": "Category of the word",
            "example": "동물"
          }
        }
      },
      "Book": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the book",
            "example": "book-123"
          },
          "title": {
            "type": "string",
            "description": "Title of the storybook",
            "example": "아기 동물들의 하루"
          },
          "coverImage": {
            "type": "string",
            "description": "URL path to the cover image",
            "example": "/uploads/images/cover.png"
          },
          "isVideoMode": {
            "type": "boolean",
            "description": "Whether this is a video-based book",
            "example": false
          },
          "videoUrl": {
            "type": "string",
            "description": "URL path to video file (for video mode books)",
            "example": "/uploads/videos/story.mp4"
          },
          "pages": {
            "type": "array",
            "description": "Array of book pages (for traditional books)",
            "items": {
              "$ref": "#/components/schemas/BookPage"
            }
          },
          "minAge": {
            "type": "integer",
            "description": "Minimum recommended age",
            "example": 3
          },
          "maxAge": {
            "type": "integer",
            "description": "Maximum recommended age",
            "example": 7
          }
        }
      },
      "BookPage": {
        "type": "object",
        "required": [
          "imageUrl",
          "audioUrl"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the page",
            "example": "page-123"
          },
          "imageUrl": {
            "type": "string",
            "description": "URL path to the page image",
            "example": "/uploads/images/page1.png"
          },
          "audioUrl": {
            "type": "string",
            "description": "URL path to the page audio",
            "example": "/uploads/audio/page1.mp3"
          },
          "textContent": {
            "type": "string",
            "description": "Optional text content for the page",
            "example": "옛날 옛적에 작은 마을이 있었습니다."
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "description": "Response data"
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Operation completed successfully"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error type",
            "example": "Bad request"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message",
            "example": "Required fields are missing"
          }
        }
      },
      "BatchWordRequest": {
        "type": "object",
        "required": [
          "words"
        ],
        "properties": {
          "words": {
            "type": "array",
            "description": "Array of words to create",
            "items": {
              "$ref": "#/components/schemas/Word"
            }
          }
        }
      },
      "BatchWordResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "created": {
                "type": "array",
                "description": "Successfully created words",
                "items": {
                  "$ref": "#/components/schemas/Word"
                }
              },
              "errors": {
                "type": "array",
                "description": "Words that failed to create",
                "items": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "type": "integer",
                      "description": "Index of the failed word in the input array"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    },
                    "data": {
                      "type": "object",
                      "description": "The word data that failed"
                    }
                  }
                }
              },
              "summary": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of words processed"
                  },
                  "created": {
                    "type": "integer",
                    "description": "Number of words successfully created"
                  },
                  "failed": {
                    "type": "integer",
                    "description": "Number of words that failed"
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "example": "Batch operation completed: 8 created, 2 failed"
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "summary": "Get all books",
        "description": "Retrieve all storybooks in the database. No authentication required.",
        "tags": [
          "Books"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved all books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Book"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of books",
                      "example": 15
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new storybook",
        "description": "Create a new storybook (traditional or video mode). Requires API key authentication.",
        "tags": [
          "Books"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Traditional Book",
                    "required": [
                      "title",
                      "coverImage",
                      "pages"
                    ],
                    "properties": {
                      "title": {
                        "type": "string",
                        "example": "아기 동물들의 하루"
                      },
                      "coverImage": {
                        "type": "string",
                        "example": "/uploads/images/cover.png"
                      },
                      "isVideoMode": {
                        "type": "boolean",
                        "example": false
                      },
                      "pages": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/BookPage"
                        }
                      },
                      "minAge": {
                        "type": "integer",
                        "example": 3
                      },
                      "maxAge": {
                        "type": "integer",
                        "example": 7
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Video Book",
                    "required": [
                      "title",
                      "videoUrl"
                    ],
                    "properties": {
                      "title": {
                        "type": "string",
                        "example": "비디오 동화책"
                      },
                      "coverImage": {
                        "type": "string",
                        "example": "/uploads/images/video-cover.png"
                      },
                      "isVideoMode": {
                        "type": "boolean",
                        "example": true
                      },
                      "videoUrl": {
                        "type": "string",
                        "example": "/uploads/videos/story.mp4"
                      },
                      "minAge": {
                        "type": "integer",
                        "example": 3
                      },
                      "maxAge": {
                        "type": "integer",
                        "example": 7
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "summary": "Get book by ID",
        "description": "Retrieve a specific storybook by its ID. No authentication required.",
        "tags": [
          "Books"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Book ID",
            "example": "book-123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the book",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Book"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update book",
        "description": "Update an existing storybook by ID. Requires API key authentication.",
        "tags": [
          "Books"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Book ID",
            "example": "book-123"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the book"
                  },
                  "coverImage": {
                    "type": "string",
                    "description": "URL path to cover image"
                  },
                  "isVideoMode": {
                    "type": "boolean",
                    "description": "Whether this is a video-based book"
                  },
                  "videoUrl": {
                    "type": "string",
                    "description": "URL path to video file (for video mode)"
                  },
                  "pages": {
                    "type": "array",
                    "description": "Array of book pages (exactly 4 for traditional books)",
                    "items": {
                      "$ref": "#/components/schemas/BookPage"
                    }
                  }
                }
              },
              "example": {
                "title": "수정된 동화책 제목",
                "coverImage": "/uploads/images/new-cover.png"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error or no fields provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete book",
        "description": "Delete an existing storybook by ID. Requires API key authentication.",
        "tags": [
          "Books"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Book ID",
            "example": "book-123"
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Book deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books/video-upload": {
      "post": {
        "summary": "Upload video and create storybook",
        "description": "Upload video file and optional cover image, then create a video storybook in one step. Requires API key authentication.\n\n**curl Example:**\n```bash\ncurl -X POST \\\n  -H \"X-API-Key: YOUR_API_KEY\" \\\n  -F \"title=My Story\" \\\n  -F \"minAge=3\" \\\n  -F \"maxAge=7\" \\\n  -F \"video=@/path/to/video.mp4;type=video/mp4\" \\\n  -F \"coverImage=@/path/to/cover.png;type=image/png\" \\\n  http://localhost:3001/api/books/video-upload\n```\n",
        "tags": [
          "Books"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "video"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the video storybook",
                    "example": "새로운 비디오 동화"
                  },
                  "video": {
                    "type": "string",
                    "format": "binary",
                    "description": "Video file (MP4, AVI, MOV, etc.)"
                  },
                  "coverImage": {
                    "type": "string",
                    "format": "binary",
                    "description": "Optional cover image (PNG, JPG, etc.)"
                  },
                  "minAge": {
                    "type": "integer",
                    "description": "Minimum recommended age",
                    "example": 3
                  },
                  "maxAge": {
                    "type": "integer",
                    "description": "Maximum recommended age",
                    "example": 7
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Video storybook created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Book"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "uploadedFiles": {
                              "type": "object",
                              "properties": {
                                "video": {
                                  "type": "object",
                                  "properties": {
                                    "filename": {
                                      "type": "string"
                                    },
                                    "originalName": {
                                      "type": "string"
                                    },
                                    "size": {
                                      "type": "integer"
                                    },
                                    "mimetype": {
                                      "type": "string"
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "coverImage": {
                                  "type": "object",
                                  "nullable": true
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "Video storybook created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields or files",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books/complete": {
      "post": {
        "summary": "Create complete book with all 4 pages",
        "description": "Create a complete traditional storybook with exactly 4 pages in a single request. Requires API key authentication.",
        "tags": [
          "Books"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "coverImage",
                  "page1Image",
                  "page1Audio",
                  "page2Image",
                  "page2Audio",
                  "page3Image",
                  "page3Audio",
                  "page4Image",
                  "page4Audio"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "완전한 동화책"
                  },
                  "coverImage": {
                    "type": "string",
                    "example": "/uploads/images/cover.png"
                  },
                  "page1Image": {
                    "type": "string",
                    "example": "/uploads/images/page1.png"
                  },
                  "page1Audio": {
                    "type": "string",
                    "example": "/uploads/audio/page1.mp3"
                  },
                  "page1Text": {
                    "type": "string",
                    "example": "첫 번째 페이지 내용"
                  },
                  "page2Image": {
                    "type": "string",
                    "example": "/uploads/images/page2.png"
                  },
                  "page2Audio": {
                    "type": "string",
                    "example": "/uploads/audio/page2.mp3"
                  },
                  "page2Text": {
                    "type": "string",
                    "example": "두 번째 페이지 내용"
                  },
                  "page3Image": {
                    "type": "string",
                    "example": "/uploads/images/page3.png"
                  },
                  "page3Audio": {
                    "type": "string",
                    "example": "/uploads/audio/page3.mp3"
                  },
                  "page3Text": {
                    "type": "string",
                    "example": "세 번째 페이지 내용"
                  },
                  "page4Image": {
                    "type": "string",
                    "example": "/uploads/images/page4.png"
                  },
                  "page4Audio": {
                    "type": "string",
                    "example": "/uploads/audio/page4.mp3"
                  },
                  "page4Text": {
                    "type": "string",
                    "example": "네 번째 페이지 내용"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Complete book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/words": {
      "get": {
        "summary": "Get all words",
        "description": "Retrieve all words in the database. No authentication required.",
        "tags": [
          "Words"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved all words",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Word"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of words",
                      "example": 25
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new word",
        "description": "Create a new word. Requires API key authentication.",
        "tags": [
          "Words"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "nameEn",
                  "imageUrl",
                  "audioKo",
                  "audioEn",
                  "category"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Korean name of the word",
                    "example": "고양이"
                  },
                  "nameEn": {
                    "type": "string",
                    "description": "English name of the word",
                    "example": "cat"
                  },
                  "imageUrl": {
                    "type": "string",
                    "description": "URL path to the word image",
                    "example": "/uploads/images/cat.png"
                  },
                  "audioKo": {
                    "type": "string",
                    "description": "URL path to Korean audio file",
                    "example": "/uploads/audio/cat-ko.mp3"
                  },
                  "audioEn": {
                    "type": "string",
                    "description": "URL path to English audio file",
                    "example": "/uploads/audio/cat-en.mp3"
                  },
                  "category": {
                    "type": "string",
                    "description": "Category of the word",
                    "example": "동물"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Word created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Word"
                    },
                    "message": {
                      "type": "string",
                      "example": "Word created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/words/{id}": {
      "get": {
        "summary": "Get word by ID",
        "description": "Retrieve a specific word by its ID. No authentication required.",
        "tags": [
          "Words"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Word ID",
            "example": "word-123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the word",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Word"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Word not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update word",
        "description": "Update an existing word by ID. Requires API key authentication.",
        "tags": [
          "Words"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Word ID",
            "example": "word-123"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Korean name of the word"
                  },
                  "nameEn": {
                    "type": "string",
                    "description": "English name of the word"
                  },
                  "imageUrl": {
                    "type": "string",
                    "description": "URL path to the word image"
                  },
                  "audioKo": {
                    "type": "string",
                    "description": "URL path to Korean audio file"
                  },
                  "audioEn": {
                    "type": "string",
                    "description": "URL path to English audio file"
                  },
                  "category": {
                    "type": "string",
                    "description": "Category of the word"
                  }
                }
              },
              "example": {
                "name": "새로운 고양이",
                "category": "애완동물"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Word updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - no fields provided for update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Word not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete word",
        "description": "Delete an existing word by ID. Requires API key authentication.",
        "tags": [
          "Words"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Word ID",
            "example": "word-123"
          }
        ],
        "responses": {
          "200": {
            "description": "Word deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Word deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Word not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/words/batch": {
      "post": {
        "summary": "Create multiple words (batch operation)",
        "description": "Create multiple words in a single request. Requires API key authentication. Partial success is allowed - some words may succeed while others fail.",
        "tags": [
          "Words"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchWordRequest"
              },
              "example": {
                "words": [
                  {
                    "name": "고양이",
                    "nameEn": "cat",
                    "imageUrl": "/uploads/images/cat.png",
                    "audioKo": "/uploads/audio/cat-ko.mp3",
                    "audioEn": "/uploads/audio/cat-en.mp3",
                    "category": "동물"
                  },
                  {
                    "name": "개",
                    "nameEn": "dog",
                    "imageUrl": "/uploads/images/dog.png",
                    "audioKo": "/uploads/audio/dog-ko.mp3",
                    "audioEn": "/uploads/audio/dog-en.mp3",
                    "category": "동물"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Batch operation completed (may include partial failures)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchWordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}